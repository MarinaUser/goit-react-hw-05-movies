{"version":3,"file":"static/js/565.f8a2926f.chunk.js","mappings":"6RAEaA,EAAWC,EAAAA,GAAAA,GAAH,+MAURC,EAAWD,EAAAA,GAAAA,GAAH,6CAIRE,EAAWF,EAAAA,GAAAA,IAAH,0NAORG,EAAOH,EAAAA,GAAAA,IAAH,6EAKJI,EAAQJ,EAAAA,GAAAA,IAAH,+EAKLK,EAAWL,EAAAA,GAAAA,IAAH,wJ,SCgDrB,EAlEa,WACX,OAA0BM,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAsCF,EAAAA,EAAAA,WAAS,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KAGQC,GAAYC,EAAAA,EAAAA,MAAZD,SAENE,EAAAA,EAAAA,YAAU,WAGVC,EAAUH,EACX,GAAE,CAACA,IAEJ,IAAMG,EAAS,mCAAG,WAAMC,GAAN,gGAESC,EAAAA,GAAiBD,GAF1B,OAERE,EAFQ,OAGdT,EAASS,GACTP,GAAe,GAJD,gDAMbQ,EAAAA,GAAAA,MAAY,kCANC,yDAAH,sDAWf,OAAqB,IAAjBX,EAAMY,QAAgBV,EACRS,EAAAA,GAAAA,KAAW,0DAK3B,iCAEI,SAACnB,EAAD,UACGQ,EAAMa,KAAI,YAA4C,IAAzCL,EAAwC,EAAxCA,GAAIM,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACjC,OACE,SAACtB,EAAD,WACE,UAACC,EAAD,YACE,SAACC,EAAD,WAEI,SAACC,EAAD,CACEoB,IACED,EACIP,EAAAA,GAAcO,EACdP,EAAAA,GAENS,IAAKH,EACLI,MAAM,MACNC,OAAO,WAKb,UAACtB,EAAD,YACE,uBAAIgB,KACJ,uBAAIC,WAnBKP,EAwBlB,OAEL,SAAC,KAAD,CAAgBa,UAAW,QAGhC,C,+OC7EKC,EAAU,mCACVC,EAAW,gCAIJC,EAAW,mCAAG,wGACAC,EAAAA,EAAAA,IAAA,UAChBF,EADgB,sCACsBD,EADtB,oBADA,uBACfI,EADe,EACfA,KAGAC,EAAYD,EAAZC,QAJe,kBAMlBA,GANkB,2CAAH,qDAWjB,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA0BpB,GAA1B,yFACkBiB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAf,EADA,oBACcc,EADd,oBADlB,uBACGI,EADH,EACGA,KADH,kBAKEA,GALF,kEAUA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAA4BrB,GAA5B,2FACkBiB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAf,EADA,4BACsBc,EADtB,oBADlB,uBACGI,EADH,EACGA,KAIAI,EAASJ,EAATI,KALH,kBAOEA,GAPF,kEAYA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA8BvB,GAA9B,2FACkBiB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAf,EADA,4BACsBc,EADtB,2BADlB,uBACGI,EADH,EACGA,KAIAC,EAAYD,EAAZC,QALH,kBAOEA,GAPF,kEAYA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,2FACkBR,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBACgCW,EADhC,+CADlB,uBACGP,EADH,EACGA,KAGAC,EAAYD,EAAZC,QAJH,kBAMEA,GANF,kEASA,IAAMO,EAAU,kCACVC,EAAY,uE","sources":["pages/Cast/Cast.styled.jsx","pages/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr ;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n\nexport const CastItem = styled.li`\n  list-style: none;\n`;\n\nexport const CardCast = styled.div`\n  background-color: var(--primary-white-color);\n  box-shadow: 0px 1px 3px rgb(0 0 0 / 12%), 0px 1px 1px rgb(0 0 0 / 14%),\n    0px 2px 1px rgb(0 0 0 / 20%);\n  border-radius: 0px 0px 4px 4px;\n`;\n\nexport const Card = styled.div`\n  border-radius: 4px 4px 0 0;\n  object-fit: cover;\n`;\n\nexport const Image = styled.img`\n  border-radius: 4px 4px 0 0;\n  object-fit: contain;\n`;\n\nexport const CardInfo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 5px;\n  padding: 10px;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from 'services/api';\nimport { toast, ToastContainer } from 'react-toastify';\n\n\nimport {\n  CastList,\n  CastItem,\n  CardCast,\n  Card,\n  CardInfo,\n  Image,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState([]);\n  const [castLoading, setcastLoading] = useState(false);\n \n\n  const { movieId } = useParams();\n\n    useEffect(() => {\n      \n\n    fetchData(movieId);\n  }, [movieId]);\n\n  const fetchData = async id => {\n    try {\n      const response = await API.getMovieCast(id);\n      setCasts(response);\n      setcastLoading(true);\n    } catch {\n       toast.error('Oops, something went wrong ...');\n      \n    }\n  };\n\n  if (casts.length === 0 && castLoading) {\n    const message = toast.warn('We dont have any information about cast of this movie');\n    return message ;\n  }\n  \n  return (\n    <>\n      \n        <CastList>\n          {casts.map(({ id, character, name, profile_path }) => {\n            return (\n              <CastItem key={id}>\n                <CardCast>\n                  <Card>\n                    {\n                      <Image\n                        src={\n                          profile_path\n                            ? API.baseUrl + profile_path\n                            : API.defaultUrl\n                        }\n                        alt={name}\n                        width=\"200\"\n                        height=\"250\"\n                      />\n                    }\n                  </Card>\n\n                  <CardInfo>\n                    <p>{character}</p>\n                    <p>{name}</p>\n                  </CardInfo>\n                </CardCast>\n              </CastItem>\n            );\n          })}\n        </CastList>\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n};\n\nexport default Cast;","import axios from \"axios\";\n\nconst API_KEY = '73310c38a21f3b9ad6a835040df80327';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n//Запит популярних фільмів\n\nexport const getTrending = async () => {\n    const { data } = await axios.get(\n        `${BASE_URL}trending/movie/day?api_key=${API_KEY}&language=en-US`\n    );\n    const { results } = data;\n  // console.log(results);\n  return results;\n}\n\n// Запит повної інфо про фільм\n\nexport async function getDetails(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log(data);\n  return data;\n}\n\n// Запит акторів\n\nexport async function getMovieCast(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  const { cast } = data;\n  // console.log(cast);\n  return cast;\n}\n\n// Запит огладів\n\nexport async function getMovieReview(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  const { results } = data;\n  // console.log(results);\n  return results;\n}\n\n// Запит пошуку за ключовим словом\n\nexport async function getMoviesQuery(query) {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  const { results } = data;\n  // console.log(results);\n  return results;\n}\n\nexport const baseUrl = 'https://image.tmdb.org/t/p/w500';\nexport const defaultUrl ='https://www.freeiconspng.com/thumbs/no-image-icon/no-image-icon-6.png';"],"names":["CastList","styled","CastItem","CardCast","Card","Image","CardInfo","useState","casts","setCasts","castLoading","setcastLoading","movieId","useParams","useEffect","fetchData","id","API","response","toast","length","map","character","name","profile_path","src","alt","width","height","autoClose","API_KEY","BASE_URL","getTrending","axios","data","results","getDetails","getMovieCast","cast","getMovieReview","getMoviesQuery","query","baseUrl","defaultUrl"],"sourceRoot":""}